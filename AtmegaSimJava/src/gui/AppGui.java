package gui;

import java.awt.Dimension;
import java.io.ByteArrayOutputStream;
import java.lang.management.ManagementFactory;
import java.util.concurrent.TimeUnit;
import logging.Logger;
import javax.swing.JOptionPane;
import jni.App;


/**
 *
 * @author sx@htl-kaindorf.at
 */
public class AppGui extends javax.swing.JFrame
{
  static final Logger LOGP, LOG;

  static 
  {
    //System.setProperty("logging.Logger.printStackTrace", "");
    //System.setProperty("logging.LogOutputStreamHandler.showRecordHashcode", "false");
    //System.setProperty("logging.Logger.printAll", "");
    //System.setProperty("logging.LogRecordDataFormattedText.Terminal","NETBEANS");
    //System.setProperty("logging.LogRecordDataFormattedText.Terminal","LINUX");
    System.setProperty("logging.Logger.Level", "ALL");
    //System.setProperty("logging.LogOutputStreamHandler.timeFormat", "%1$ta/%1$tF/%1$tT.%1$tL #%2$-3d");
    //System.setProperty("logging.LogOutputStreamHandler.colorize", "false");

    //System.setProperty("gui.ProtocolTesterGui.Logger.Level", "FINER");
    //System.setProperty("measure.PortSim.Logger.Level", "ALL");
    //System.setProperty("measure.PortCom.Logger.Level", "ALL");
    LOGP = Logger.getParentLogger();
    LOG = Logger.getLogger(AppGui.class.getName());
  }     

  
  
  private final App app;
  /**
   * Creates new form AppGui
   */
  @SuppressWarnings("OverridableMethodCallInConstructor")
  public AppGui ()
  {
    initComponents();
    app = new App();
    setTitle("AppSim: " + ManagementFactory.getRuntimeMXBean().getName());
    setMinimumSize(new Dimension(400,50));
  } 


  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    jpanWest = new javax.swing.JPanel();
    jPanel1 = new javax.swing.JPanel();
    jbutAppInit = new javax.swing.JButton();
    jPanel2 = new javax.swing.JPanel();
    jcbMainAutomatic = new javax.swing.JCheckBox();
    jbutAppMain = new javax.swing.JButton();
    jPanel3 = new javax.swing.JPanel();
    jcbTaskAutomatic = new javax.swing.JCheckBox();
    jbutAppTask1ms = new javax.swing.JButton();
    jbutAppTask2ms = new javax.swing.JButton();
    jbutAppTask4ms = new javax.swing.JButton();
    jbutAppTask8ms = new javax.swing.JButton();
    jbutAppTask16ms = new javax.swing.JButton();
    jbutAppTask32ms = new javax.swing.JButton();
    jbutAppTask64ms = new javax.swing.JButton();
    jbutAppTask128ms = new javax.swing.JButton();
    jbutSys500us = new javax.swing.JButton();
    jPanel4 = new javax.swing.JPanel();
    jbutAppTimer0Ovf1 = new javax.swing.JButton();
    jbutAppTimer1Ovf1 = new javax.swing.JButton();
    jbutAppTimer2Ovf1 = new javax.swing.JButton();
    jpanNorth = new javax.swing.JPanel();
    jtfUartIsrByte = new javax.swing.JTextField();
    jbutAppUart = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jpanWest.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
    jpanWest.setLayout(new java.awt.GridBagLayout());

    jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    jPanel1.setLayout(new java.awt.GridBagLayout());

    jbutAppInit.setText("app_init");
    jbutAppInit.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppInit.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppInitActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(9, 5, 9, 5);
    jPanel1.add(jbutAppInit, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    jpanWest.add(jPanel1, gridBagConstraints);

    jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    jPanel2.setLayout(new java.awt.GridBagLayout());

    jcbMainAutomatic.setText("automatic call");
    jcbMainAutomatic.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jcbMainAutomaticActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    gridBagConstraints.insets = new java.awt.Insets(10, 7, 6, 7);
    jPanel2.add(jcbMainAutomatic, gridBagConstraints);

    jbutAppMain.setText("app_main");
    jbutAppMain.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppMain.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppMainActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 5);
    jPanel2.add(jbutAppMain, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    jpanWest.add(jPanel2, gridBagConstraints);

    jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    jPanel3.setLayout(new java.awt.GridBagLayout());

    jcbTaskAutomatic.setText("automatic call");
    jcbTaskAutomatic.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jcbTaskAutomaticActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    gridBagConstraints.insets = new java.awt.Insets(9, 6, 9, 6);
    jPanel3.add(jcbTaskAutomatic, gridBagConstraints);

    jbutAppTask1ms.setText("app_task_1ms");
    jbutAppTask1ms.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppTask1ms.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppTask1msActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
    jPanel3.add(jbutAppTask1ms, gridBagConstraints);

    jbutAppTask2ms.setText("app_task_2ms");
    jbutAppTask2ms.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppTask2ms.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppTask2msActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
    jPanel3.add(jbutAppTask2ms, gridBagConstraints);

    jbutAppTask4ms.setText("app_task_4ms");
    jbutAppTask4ms.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppTask4ms.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppTask4msActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
    jPanel3.add(jbutAppTask4ms, gridBagConstraints);

    jbutAppTask8ms.setText("app_task_8ms");
    jbutAppTask8ms.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppTask8ms.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppTask8msActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
    jPanel3.add(jbutAppTask8ms, gridBagConstraints);

    jbutAppTask16ms.setText("app_task_16ms");
    jbutAppTask16ms.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppTask16ms.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppTask16msActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
    jPanel3.add(jbutAppTask16ms, gridBagConstraints);

    jbutAppTask32ms.setText("app_task_32ms");
    jbutAppTask32ms.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppTask32ms.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppTask32msActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
    jPanel3.add(jbutAppTask32ms, gridBagConstraints);

    jbutAppTask64ms.setText("app_task_64ms");
    jbutAppTask64ms.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppTask64ms.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppTask64msActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
    jPanel3.add(jbutAppTask64ms, gridBagConstraints);

    jbutAppTask128ms.setText("app_task_128ms");
    jbutAppTask128ms.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppTask128ms.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppTask128msActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 13, 5);
    jPanel3.add(jbutAppTask128ms, gridBagConstraints);

    jbutSys500us.setText("sys_500us_isr");
    jbutSys500us.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutSys500us.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutSys500usActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 8, 5);
    jPanel3.add(jbutSys500us, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    jpanWest.add(jPanel3, gridBagConstraints);

    jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    jPanel4.setLayout(new java.awt.GridBagLayout());

    jbutAppTimer0Ovf1.setText("app_timer0_ovf");
    jbutAppTimer0Ovf1.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppTimer0Ovf1.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppTimer0Ovf1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 5);
    jPanel4.add(jbutAppTimer0Ovf1, gridBagConstraints);

    jbutAppTimer1Ovf1.setText("app_timer1_ovf");
    jbutAppTimer1Ovf1.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppTimer1Ovf1.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppTimer1Ovf1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
    jPanel4.add(jbutAppTimer1Ovf1, gridBagConstraints);

    jbutAppTimer2Ovf1.setText("app_timer2_ovf");
    jbutAppTimer2Ovf1.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppTimer2Ovf1.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppTimer2Ovf1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 5);
    jPanel4.add(jbutAppTimer2Ovf1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    jpanWest.add(jPanel4, gridBagConstraints);

    getContentPane().add(jpanWest, java.awt.BorderLayout.WEST);

    jpanNorth.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
    jpanNorth.setLayout(new java.awt.GridBagLayout());

    jtfUartIsrByte.setMinimumSize(new java.awt.Dimension(50, 27));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 0);
    jpanNorth.add(jtfUartIsrByte, gridBagConstraints);

    jbutAppUart.setText("app_uart_isr");
    jbutAppUart.setMargin(new java.awt.Insets(4, 4, 4, 4));
    jbutAppUart.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutAppUartActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    jpanNorth.add(jbutAppUart, gridBagConstraints);

    getContentPane().add(jpanNorth, java.awt.BorderLayout.NORTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jbutAppInitActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppInitActionPerformed
  {//GEN-HEADEREND:event_jbutAppInitActionPerformed
    app.init();
  }//GEN-LAST:event_jbutAppInitActionPerformed

  private void jbutAppUartActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppUartActionPerformed
  {//GEN-HEADEREND:event_jbutAppUartActionPerformed
    String s = jtfUartIsrByte.getText();
    if (s == null)
      app.uart_isr((byte)0);
    else
    {
      try
      {
        String [] sa = s.split(",");
        ByteArrayOutputStream baos = new ByteArrayOutputStream(sa.length);
        for (int i=0; i<sa.length; i++)
        {
          String v = sa[i].trim();
          if (v.startsWith("0x"))
            baos.write(Byte.parseByte(v.substring(2), 16));
          else if (v.startsWith("0b"))
            baos.write(Byte.parseByte(v.substring(2), 2));
          else if (v.startsWith("0") && v.length()>1)
            baos.write(Byte.parseByte(v.substring(1), 8));
          else if (v.startsWith("'") && v.endsWith("'") && v.length() == 3)
            baos.write((byte)(v.charAt(1)));
          else if (v.startsWith("\"") && v.endsWith("\"") && v.length() > 2)
          {
            for (int j=1; j<v.length()-1; j++)
            {
              baos.write((byte)v.charAt(j));
            }
          }
          else
            baos.write(Byte.parseByte(v, 10));
        }
        byte [] ba = baos.toByteArray();
        for (int i=0; i<ba.length; i++)
          app.uart_isr(ba[i]);
      }
      catch (Exception ex)
      {
        ex.printStackTrace(System.err);
        JOptionPane.showMessageDialog(this, ex.getClass().getSimpleName(), "Error...", JOptionPane.ERROR_MESSAGE);
      }
    }
  }//GEN-LAST:event_jbutAppUartActionPerformed

  private void jbutAppTask1msActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppTask1msActionPerformed
  {//GEN-HEADEREND:event_jbutAppTask1msActionPerformed
    app.task_1ms();
  }//GEN-LAST:event_jbutAppTask1msActionPerformed

  private void jbutAppTask2msActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppTask2msActionPerformed
  {//GEN-HEADEREND:event_jbutAppTask2msActionPerformed
    app.task_2ms();
  }//GEN-LAST:event_jbutAppTask2msActionPerformed

  private void jbutAppTask4msActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppTask4msActionPerformed
  {//GEN-HEADEREND:event_jbutAppTask4msActionPerformed
    app.task_4ms();
  }//GEN-LAST:event_jbutAppTask4msActionPerformed

  private void jbutAppTask8msActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppTask8msActionPerformed
  {//GEN-HEADEREND:event_jbutAppTask8msActionPerformed
    app.task_8ms();
  }//GEN-LAST:event_jbutAppTask8msActionPerformed

  private void jbutAppTask16msActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppTask16msActionPerformed
  {//GEN-HEADEREND:event_jbutAppTask16msActionPerformed
    app.task_16ms();
  }//GEN-LAST:event_jbutAppTask16msActionPerformed

  private void jbutAppTask32msActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppTask32msActionPerformed
  {//GEN-HEADEREND:event_jbutAppTask32msActionPerformed
    app.task_32ms();
  }//GEN-LAST:event_jbutAppTask32msActionPerformed

  private void jbutAppTask64msActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppTask64msActionPerformed
  {//GEN-HEADEREND:event_jbutAppTask64msActionPerformed
    app.task_64ms();
  }//GEN-LAST:event_jbutAppTask64msActionPerformed

  private void jbutAppTask128msActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppTask128msActionPerformed
  {//GEN-HEADEREND:event_jbutAppTask128msActionPerformed
    app.task_128ms();
  }//GEN-LAST:event_jbutAppTask128msActionPerformed

  private void jbutSys500usActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutSys500usActionPerformed
  {//GEN-HEADEREND:event_jbutSys500usActionPerformed
    app.sys_500us_isr();
  }//GEN-LAST:event_jbutSys500usActionPerformed

  private void jbutAppTimer0Ovf1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppTimer0Ovf1ActionPerformed
  {//GEN-HEADEREND:event_jbutAppTimer0Ovf1ActionPerformed
    app.timer0_ovf();
  }//GEN-LAST:event_jbutAppTimer0Ovf1ActionPerformed

  private void jbutAppTimer1Ovf1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppTimer1Ovf1ActionPerformed
  {//GEN-HEADEREND:event_jbutAppTimer1Ovf1ActionPerformed
    app.timer1_ovf();
  }//GEN-LAST:event_jbutAppTimer1Ovf1ActionPerformed

  private void jbutAppTimer2Ovf1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppTimer2Ovf1ActionPerformed
  {//GEN-HEADEREND:event_jbutAppTimer2Ovf1ActionPerformed
    app.timer2_ovf();
  }//GEN-LAST:event_jbutAppTimer2Ovf1ActionPerformed

  private void jcbTaskAutomaticActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jcbTaskAutomaticActionPerformed
  {//GEN-HEADEREND:event_jcbTaskAutomaticActionPerformed
    enableTaskAutomatic(jcbTaskAutomatic.isSelected());
  }//GEN-LAST:event_jcbTaskAutomaticActionPerformed

  private void jbutAppMainActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutAppMainActionPerformed
  {//GEN-HEADEREND:event_jbutAppMainActionPerformed
    app.main();
  }//GEN-LAST:event_jbutAppMainActionPerformed

  private void jcbMainAutomaticActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jcbMainAutomaticActionPerformed
  {//GEN-HEADEREND:event_jcbMainAutomaticActionPerformed
    enableMainAutomatic(jcbMainAutomatic.isSelected());
  }//GEN-LAST:event_jcbMainAutomaticActionPerformed
  

  /**
   * @param args the command line arguments
   */
  public static void main (String args[])
  {
    /*
     * Set the Nimbus look and feel
     */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(AppGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(AppGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(AppGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(AppGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    LOGP.addHandler(new logging.LogOutputStreamHandler(System.out));
    LOG.setLevel(java.util.logging.Level.ALL);
    
    /*
     * Create and display the form
     */
    java.awt.EventQueue.invokeLater(() ->
    {
      new AppGui().setVisible(true);
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JButton jbutAppInit;
  private javax.swing.JButton jbutAppMain;
  private javax.swing.JButton jbutAppTask128ms;
  private javax.swing.JButton jbutAppTask16ms;
  private javax.swing.JButton jbutAppTask1ms;
  private javax.swing.JButton jbutAppTask2ms;
  private javax.swing.JButton jbutAppTask32ms;
  private javax.swing.JButton jbutAppTask4ms;
  private javax.swing.JButton jbutAppTask64ms;
  private javax.swing.JButton jbutAppTask8ms;
  private javax.swing.JButton jbutAppTimer0Ovf1;
  private javax.swing.JButton jbutAppTimer1Ovf1;
  private javax.swing.JButton jbutAppTimer2Ovf1;
  private javax.swing.JButton jbutAppUart;
  private javax.swing.JButton jbutSys500us;
  private javax.swing.JCheckBox jcbMainAutomatic;
  private javax.swing.JCheckBox jcbTaskAutomatic;
  private javax.swing.JPanel jpanNorth;
  private javax.swing.JPanel jpanWest;
  private javax.swing.JTextField jtfUartIsrByte;
  // End of variables declaration//GEN-END:variables


  private void enableTaskAutomatic (boolean enabled)
  {
    if (enabled)
    {
      jbutAppTask1ms.setEnabled(false);
      jbutAppTask2ms.setEnabled(false);
      jbutAppTask4ms.setEnabled(false);
      jbutAppTask8ms.setEnabled(false);
      jbutAppTask16ms.setEnabled(false);
      jbutAppTask32ms.setEnabled(false);
      jbutAppTask64ms.setEnabled(false);
      jbutAppTask128ms.setEnabled(false);
      if (automaticCallThread == null)
      {
        automaticCallThread = new AutomaticCallThread();
        automaticCallThread.start();
      }
      automaticCallThread.setCallTasks(true);
    }
    else
    {
      jbutAppTask1ms.setEnabled(true);
      jbutAppTask2ms.setEnabled(true);
      jbutAppTask4ms.setEnabled(true);
      jbutAppTask8ms.setEnabled(true);
      jbutAppTask16ms.setEnabled(true);
      jbutAppTask32ms.setEnabled(true);
      jbutAppTask64ms.setEnabled(true);
      jbutAppTask128ms.setEnabled(true);
      if (automaticCallThread != null)
      {
        if (!jcbMainAutomatic.isSelected())
        {
          automaticCallThread.interrupt();
          automaticCallThread = null;
        }
        else
          automaticCallThread.setCallTasks(false);
      }
    }
  }
  
  private void enableMainAutomatic (boolean enabled)
  {
    if (enabled)
    {
      jbutAppMain.setEnabled(false);
      if (automaticCallThread == null)
      {
        automaticCallThread = new AutomaticCallThread();
        automaticCallThread.start();
      }
      automaticCallThread.setCallMain(true);
    }
    else
    {
      jbutAppMain.setEnabled(true);
      if (automaticCallThread != null)
      {
        if (!jcbTaskAutomatic.isSelected())
        {
          automaticCallThread.interrupt();
          automaticCallThread = null;
        }
        else
          automaticCallThread.setCallMain(false);
      }
    }

  }
  
  
  private AutomaticCallThread automaticCallThread;


  private class AutomaticCallThread extends Thread
  {
    private boolean callTasks;
    private boolean callMain;


    public boolean isCallTasks ()
    {
      return callTasks;
    }


    public void setCallTasks (boolean callTasks)
    {
      this.callTasks = callTasks;
    }


    public boolean isCallMain ()
    {
      return callMain;
    }


    public void setCallMain (boolean callMain)
    {
      this.callMain = callMain;
    }
    
    
    @Override
    public void run ()
    {
      try
      {
        LOG.finest("AutomaticCallThread started");
        while (!Thread.currentThread().isInterrupted())
        {
          try
          {
            if (callMain && callTasks)
            {
              TimeUnit.NANOSECONDS.sleep(250);
              app.sys_500us_isr();
              TimeUnit.NANOSECONDS.sleep(250);
              app.main();
            }
            else if (callTasks)
            {
              TimeUnit.NANOSECONDS.sleep(500);
              app.sys_500us_isr();
            }
            else if (callMain)
            {
              TimeUnit.NANOSECONDS.sleep(500);
              app.main();
            }
            else
            {
              TimeUnit.NANOSECONDS.sleep(500);
            }
          }
          catch (InterruptedException ex) { Thread.currentThread().interrupt(); }
          catch (Exception ex)
          {
            LOG.warning(ex);
          }
        }
      }
      finally
      {
        LOG.finest("AutomaticCallThread stopped");
      }
    }
  }

}
